#!/usr/bin/env bash
#  detectwm
#  Edited by: Aaron Caffrey
#  detect and output the name of the Window Manager, if present
#  only meant to be run on Linux/*BSD
#  Original Author: Brett Bohnenkamper (KittyKatt) in screenfetch-dev
#  Modified to stand alone by William Woodruff (woodruffw) in screenfetch-c

wmnames=( fluxbox openbox blackbox xfwm4 metacity kwin icewm pekwm fvwm dwm awesome wmaker stumpwm musca i3 xmonad ratpoison scrotwm spectrwm wmfs wmii beryl subtle e16 enlightenment sawfish emerald monsterwm dminiwm compiz Finder herbstluftwm 2bwm budgiewm budgie-wm echinus gala mutter 'gnome shell' muffin notion swm bspwm cinnamon e17 )
WM="Unknown"
if [[ -n ${DISPLAY} ]]; then
	for each in "${wmnames[@]}"; do
		PID="$(pgrep -U ${UID} "^$each*")"
		if [ "$PID" ]; then
			case $each in
				'2bwm') WM="2bwm";;
				'awesome') WM="Awesome";;
				'beryl') WM="Beryl";;
				'bspwm') WM="bspwm";;
				'blackbox') WM="BlackBox";;
				'budgiewm'|'budgie-wm') WM="BudgieWM";;
				'cinnamon') WM="Cinnamon";;
				'compiz') WM="Compiz";;
				'dminiwm') WM="dminiwm";;
				'dwm') WM="dwm";;
				'e16') WM="E16";;
				'echinus') WM="echinus";;
				'emerald') WM="Emerald";;
				'enlightenment'|'e17') WM="E17";;
				'fluxbox') WM="FluxBox";;
				'fvwm') WM="FVWM";;
				'herbstluftwm') WM="herbstluftwm";;
				'icewm') WM="IceWM";;
				'kwin') WM="KWin";;
				'metacity') WM="Metacity";;
				'monsterwm') WM="monsterwm";;
				'musca') WM="Musca";;
				*'gala'*) WM="Gala";;
				'mutter'*) WM="Mutter";;
				'gnome shell'*) WM="Mutter";;
				'muffin') WM="Muffin";;
				'notion') WM="Notion";;
				'openbox') WM="OpenBox";;
				'pekwm') WM="PekWM";;
				'ratpoison') WM="Ratpoison";;
				'sawfish') WM="Sawfish";;
				'scrotwm') WM="ScrotWM";;
				'spectrwm') WM="SpectrWM";;
				'stumpwm') WM="StumpWM";;
				'subtle') WM="subtle";;
				'swm') WM="swm";;
				'wmaker') WM="WindowMaker";;
				'wmfs') WM="WMFS";;
				'wmii') WM="wmii";;
				'xfwm4') WM="Xfwm4";;
				'xmonad') WM="XMonad";;
				'i3') WM="i3";;
			esac
		fi

		if [[ ${WM} != "Unknown" ]]; then
			break 1
		fi
	done

	# Detection failed, fallback to `xprop'
	if [[ ${WM} == "Unknown" ]]; then
		if type -p xprop >/dev/null 2>&1; then
			WM=$(xprop -root _NET_SUPPORTING_WM_CHECK)
			if [[ "$WM" =~ 'Unknown' ]]; then
				WM="Unknown"
			elif [[ "$WM" =~ '[Ii]nvalid window id format' ]]; then
				WM="Unknown"
			elif [[ "$WM" =~ "no such" ]]; then
				WM="Unknown"
			else
				WM=${WM//* }
				WM=$(xprop -id ${WM} 8s _NET_WM_NAME)
				WM=$(echo $(WM=${WM//*= }; echo ${WM//\"}))
			fi
		fi
	fi
fi

echo -en $WM